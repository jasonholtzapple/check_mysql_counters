#!/usr/bin/php
<?php
/*
check_mysql_counters version 1.2.1

Licensed under the BSD simplified 2 clause license

Copyright (c) 2012, WebPT, LLC.
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

check_mysql_counters - a Nagios plugin to capture interesting MySQL counters inspired by the Percona MySQL cacti templates
Note that it is not a typical nagios plugin as it does not alert on thresholds (yet)
Written by Jason Holtzapple - jason@bitflip.net
Updates by Jesse Morgan - morgajel@gmail.com
*/

/* constants */

$SERVICE = 'MYSQL_COUNTERS';

$RET_OK = 0;
$RET_WARN = 1;
$RET_CRIT = 2;
$RET_UNK  = 3;

/* variables */

$ret_val = $RET_UNK;

/* command line parsing */

$options = getopt('H:P:p:u:');

if(!isset($options['H']) || !isset($options['u'])) {
     usage();
}

$hostname = $options['H'];
if(isset($options['P'])) {
    $port = $options['P'];
} else {
    $port = 3306;
}
$username = $options['u'];
if(isset($options['p'])) {
    $password = $options['p'];
} else {
    $password = '';
}

/* Sadly, a whitelist seems to be required so future graphs won't break
*/

$whitelist = array(
    'ABORTED_CLIENTS',
    'ABORTED_CONNECTS',
    'BINLOG_CACHE_DISK_USE',
    'BINLOG_CACHE_USE',
    'BINLOG_COMMITS',
    'BINLOG_GROUP_COMMITS',
    'BINLOG_STMT_CACHE_DISK_USE',
    'BINLOG_STMT_CACHE_USE',
    'BYTES_RECEIVED',
    'BYTES_SENT',
    'COM_ADMIN_COMMANDS',
    'COM_ASSIGN_TO_KEYCACHE',
    'COM_ALTER_DB',
    'COM_ALTER_DB_UPGRADE',
    'COM_ALTER_EVENT',
    'COM_ALTER_FUNCTION',
    'COM_ALTER_PROCEDURE',
    'COM_ALTER_SERVER',
    'COM_ALTER_TABLE',
    'COM_ALTER_TABLESPACE',
    'COM_ANALYZE',
    'COM_ASSIGN_TO_KEYCACHE',
    'COM_BEGIN',
    'COM_BINLOG',
    'COM_CALL_PROCEDURE',
    'COM_CHANGE_DB',
    'COM_CHANGE_MASTER',
    'COM_CHECK',
    'COM_CHECKSUM',
    'COM_COMMIT',
    'COM_CREATE_DB',
    'COM_CREATE_EVENT',
    'COM_CREATE_FUNCTION',
    'COM_CREATE_INDEX',
    'COM_CREATE_PROCEDURE',
    'COM_CREATE_SERVER',
    'COM_CREATE_TABLE',
    'COM_CREATE_TRIGGER',
    'COM_CREATE_UDF',
    'COM_CREATE_USER',
    'COM_CREATE_VIEW',
    'COM_DEALLOC_SQL',
    'COM_DELETE',
    'COM_DELETE_MULTI',
    'COM_DO',
    'COM_DROP_DB',
    'COM_DROP_EVENT',
    'COM_DROP_FUNCTION',
    'COM_DROP_INDEX',
    'COM_DROP_PROCEDURE',
    'COM_DROP_SERVER',
    'COM_DROP_TABLE',
    'COM_DROP_TRIGGER',
    'COM_DROP_USER',
    'COM_DROP_VIEW',
    'COM_EMPTY_QUERY',
    'COM_EXECUTE_SQL',
    'COM_FLUSH',
    'COM_GRANT',
    'COM_HA_CLOSE',
    'COM_HA_OPEN',
    'COM_HA_READ',
    'COM_HELP',
    'COM_INSERT',
    'COM_INSERT_SELECT',
    'COM_INSTALL_PLUGIN',
    'COM_KILL',
    'COM_LOAD',
    'COM_LOCK_TABLES',
    'COM_OPTIMIZE',
    'COM_PRELOAD_KEYS',
    'COM_PREPARE_SQL',
    'COM_PURGE',
    'COM_PURGE_BEFORE_DATE',
    'COM_RELEASE_SAVEPOINT',
    'COM_RENAME_TABLE',
    'COM_RENAME_USER',
    'COM_REPAIR',
    'COM_REPLACE',
    'COM_REPLACE_SELECT',
    'COM_RESET',
    'COM_RESIGNAL',
    'COM_RESTORE_TABLE',
    'COM_REVOKE',
    'COM_REVOKE_ALL',
    'COM_ROLLBACK',
    'COM_ROLLBACK_TO_SAVEPOINT',
    'COM_SAVEPOINT',
    'COM_SELECT',
    'COM_SET_OPTION',
    'COM_SHOW_AUTHORS',
    'COM_SHOW_BINLOG_EVENTS',
    'COM_SHOW_BINLOGS',
    'COM_SHOW_CHARSETS',
    'COM_SHOW_CLIENT_STATISTICS',
    'COM_SHOW_COLLATIONS',
    'COM_SHOW_COLUMN_TYPES',
    'COM_SHOW_CONTRIBUTORS',
    'COM_SHOW_CREATE_DB',
    'COM_SHOW_CREATE_EVENT',
    'COM_SHOW_CREATE_FUNC',
    'COM_SHOW_CREATE_PROC',
    'COM_SHOW_CREATE_TABLE',
    'COM_SHOW_CREATE_TRIGGER',
    'COM_SHOW_DATABASES',
    'COM_SHOW_ENGINE_LOGS',
    'COM_SHOW_ENGINE_MUTEX',
    'COM_SHOW_ENGINE_STATUS',
    'COM_SHOW_EVENTS',
    'COM_SHOW_ERRORS',
    'COM_SHOW_FIELDS',
    'COM_SHOW_FUNCTION_STATUS',
    'COM_SHOW_GRANTS',
    'COM_SHOW_INDEX_STATISTICS',
    'COM_SHOW_KEYS',
    'COM_SHOW_MASTER_STATUS',
    'COM_SHOW_NEW_MASTER',
    'COM_SHOW_OPEN_TABLES',
    'COM_SHOW_PLUGINS',
    'COM_SHOW_PRIVILEGES',
    'COM_SHOW_PROCEDURE_STATUS',
    'COM_SHOW_PROCESSLIST',
    'COM_SHOW_PROFILE',
    'COM_SHOW_PROFILES',
    'COM_SHOW_RELAYLOG_EVENTS',
    'COM_SHOW_SLAVE_HOSTS',
    'COM_SHOW_SLAVE_STATUS',
    'COM_SHOW_SLAVE_STATUS_NOLOCK',
    'COM_SHOW_STATUS',
    'COM_SHOW_STORAGE_ENGINES',
    'COM_SHOW_TABLE_STATISTICS',
    'COM_SHOW_TABLE_STATUS',
    'COM_SHOW_TABLES',
    'COM_SHOW_TEMPORARY_TABLES',
    'COM_SHOW_THREAD_STATISTICS',
    'COM_SHOW_TRIGGERS',
    'COM_SHOW_USER_STATISTICS',
    'COM_SHOW_VARIABLES',
    'COM_SHOW_WARNINGS',
    'COM_SIGNAL',
    'COM_SLAVE_START',
    'COM_SLAVE_STOP',
    'COM_STMT_CLOSE',
    'COM_STMT_EXECUTE',
    'COM_STMT_FETCH',
    'COM_STMT_PREPARE',
    'COM_STMT_REPREPARE',
    'COM_STMT_RESET',
    'COM_STMT_SEND_LONG_DATA',
    'COM_TRUNCATE',
    'COM_UNINSTALL_PLUGIN',
    'COM_UNLOCK_TABLES',
    'COM_UPDATE',
    'COM_UPDATE_MULTI',
    'COM_XA_COMMIT',
    'COM_XA_END',
    'COM_XA_PREPARE',
    'COM_XA_RECOVER',
    'COM_XA_ROLLBACK',
    'COM_XA_START',
    'CONNECTIONS',
    'CREATED_TMP_DISK_TABLES',
    'CREATED_TMP_FILES',
    'CREATED_TMP_TABLES',
    'DELAYED_ERRORS',
    'DELAYED_INSERT_THREADS',
    'DELAYED_WRITES',
    'FLUSH_COMMANDS',
    'HANDLER_COMMIT',
    'HANDLER_DELETE',
    'HANDLER_DISCOVER',
    'HANDLER_PREPARE',
    'HANDLER_READ_FIRST',
    'HANDLER_READ_KEY',
    'HANDLER_READ_LAST',
    'HANDLER_READ_NEXT',
    'HANDLER_READ_PREV',
    'HANDLER_READ_RND',
    'HANDLER_READ_RND_NEXT',
    'HANDLER_ROLLBACK',
    'HANDLER_SAVEPOINT',
    'HANDLER_SAVEPOINT_ROLLBACK',
    'HANDLER_UPDATE',
    'HANDLER_WRITE',
    'INNODB_ADAPTIVE_HASH_CELLS',
    'INNODB_ADAPTIVE_HASH_HASH_SEARCHES',
    'INNODB_ADAPTIVE_HASH_HEAP_BUFFERS',
    'INNODB_ADAPTIVE_HASH_NON_HASH_SEARCHES',
    'INNODB_BACKGROUND_LOG_SYNC',
    'INNODB_BUFFER_POOL_PAGES_DATA',
    'INNODB_BUFFER_POOL_PAGES_DIRTY',
    'INNODB_BUFFER_POOL_PAGES_FLUSHED',
    'INNODB_BUFFER_POOL_PAGES_FREE',
    'INNODB_BUFFER_POOL_PAGES_LRU_FLUSHED',
    'INNODB_BUFFER_POOL_PAGES_MADE_NOT_YOUNG',
    'INNODB_BUFFER_POOL_PAGES_MADE_YOUNG',
    'INNODB_BUFFER_POOL_PAGES_MISC',
    'INNODB_BUFFER_POOL_PAGES_OLD',
    'INNODB_BUFFER_POOL_PAGES_TOTAL',
    'INNODB_BUFFER_POOL_READ_AHEAD',
    'INNODB_BUFFER_POOL_READ_AHEAD_EVICTED',
    'INNODB_BUFFER_POOL_READ_AHEAD_RND',
    'INNODB_BUFFER_POOL_READ_REQUESTS',
    'INNODB_BUFFER_POOL_READS',
    'INNODB_BUFFER_POOL_WAIT_FREE',
    'INNODB_BUFFER_POOL_WRITE_REQUESTS',
    'INNODB_CHECKPOINT_AGE',
    'INNODB_CHECKPOINT_MAX_AGE',
    'INNODB_CHECKPOINT_TARGET_AGE',
    'INNODB_CURRENT_ROW_LOCKS',
    'INNODB_DATA_FSYNCS',
    'INNODB_DATA_PENDING_FSYNCS',
    'INNODB_DATA_PENDING_READS',
    'INNODB_DATA_PENDING_WRITES',
    'INNODB_DATA_READ',
    'INNODB_DATA_READS',
    'INNODB_DATA_WRITES',
    'INNODB_DATA_WRITTEN',
    'INNODB_DBLWR_PAGES_WRITTEN',
    'INNODB_DBLWR_WRITES',
    'INNODB_DEADLOCKS',
    'INNODB_DICT_TABLES',
    'INNODB_HISTORY_LIST_LENGTH',
    'INNODB_IBUF_DISCARDED_DELETES',
    'INNODB_IBUF_DISCARDED_DELETE_MARKS',
    'INNODB_IBUF_DISCARDED_INSERTS',
    'INNODB_IBUF_FREE_LIST',
    'INNODB_IBUF_MERGED_DELETES',
    'INNODB_IBUF_MERGED_DELETE_MARKS',
    'INNODB_IBUF_MERGED_INSERTS',
    'INNODB_IBUF_MERGES',
    'INNODB_IBUF_SEGMENT_SIZE',
    'INNODB_IBUF_SIZE',
    'INNODB_LOG_WAITS',
    'INNODB_LOG_WRITE_REQUESTS',
    'INNODB_LOG_WRITES',
    'INNODB_LSN_CURRENT',
    'INNODB_LSN_FLUSHED',
    'INNODB_LSN_LAST_CHECKPOINT',
    'INNODB_MASTER_THREAD_10_SECOND_LOOPS',
    'INNODB_MASTER_THREAD_1_SECOND_LOOPS',
    'INNODB_MASTER_THREAD_BACKGROUND_LOOPS',
    'INNODB_MASTER_THREAD_MAIN_FLUSH_LOOPS',
    'INNODB_MASTER_THREAD_SLEEPS',
    'INNODB_MAX_TRX_ID',
    'INNODB_MEM_ADAPTIVE_HASH',
    'INNODB_MEM_DICTIONARY',
    'INNODB_MEM_TOTAL',
    'INNODB_MUTEX_OS_WAITS',
    'INNODB_MUTEX_SPIN_ROUNDS',
    'INNODB_MUTEX_SPIN_WAITS',
    'INNODB_OLDEST_VIEW_LOW_LIMIT_TRX_ID',
    'INNODB_OS_LOG_FSYNCS',
    'INNODB_OS_LOG_PENDING_FSYNCS',
    'INNODB_OS_LOG_PENDING_WRITES',
    'INNODB_OS_LOG_WRITTEN',
    'INNODB_PAGES_CREATED',
    'INNODB_PAGES_READ',
    'INNODB_PAGES_WRITTEN',
    'INNODB_PURGE_TRX_ID',
    'INNODB_PURGE_UNDO_NO',
    'INNODB_ROWS_DELETED',
    'INNODB_ROWS_INSERTED',
    'INNODB_ROWS_READ',
    'INNODB_ROWS_UPDATED',
    'INNODB_ROW_LOCK_CURRENT_WAITS',
    'INNODB_ROW_LOCK_TIME',
    'INNODB_ROW_LOCK_TIME_AVG',
    'INNODB_ROW_LOCK_TIME_MAX',
    'INNODB_ROW_LOCK_WAITS',
    'INNODB_S_LOCK_OS_WAITS',
    'INNODB_S_LOCK_SPIN_ROUNDS',
    'INNODB_S_LOCK_SPIN_WAITS',
    'INNODB_TRUNCATED_STATUS_WRITES',
    'INNODB_X_LOCK_OS_WAITS',
    'INNODB_X_LOCK_SPIN_ROUNDS',
    'INNODB_X_LOCK_SPIN_WAITS',
    'KEY_BLOCKS_NOT_FLUSHED',
    'KEY_BLOCKS_UNUSED',
    'KEY_BLOCKS_USED',
    'KEY_READ_REQUESTS',
    'KEY_READS',
    'KEY_WRITE_REQUESTS',
    'KEY_WRITES',
    'LAST_QUERY_COST',
    'MAX_USED_CONNECTIONS',
    'NOT_FLUSHED_DELAYED_ROWS',
    'OPEN_FILES',
    'OPEN_STREAMS',
    'OPEN_TABLE_DEFINITIONS',
    'OPEN_TABLES',
    'OPENED_FILES',
    'OPENED_TABLE_DEFINITIONS',
    'OPENED_TABLES',
    'PERFORMANCE_SCHEMA_COND_CLASSES_LOST',
    'PERFORMANCE_SCHEMA_COND_INSTANCES_LOST',
    'PERFORMANCE_SCHEMA_FILE_CLASSES_LOST',
    'PERFORMANCE_SCHEMA_FILE_HANDLES_LOST',
    'PERFORMANCE_SCHEMA_FILE_INSTANCES_LOST',
    'PERFORMANCE_SCHEMA_LOCKER_LOST',
    'PERFORMANCE_SCHEMA_MUTEX_CLASSES_LOST',
    'PERFORMANCE_SCHEMA_MUTEX_INSTANCES_LOST',
    'PERFORMANCE_SCHEMA_RWLOCK_CLASSES_LOST',
    'PERFORMANCE_SCHEMA_RWLOCK_INSTANCES_LOST',
    'PERFORMANCE_SCHEMA_TABLE_HANDLES_LOST',
    'PERFORMANCE_SCHEMA_TABLE_INSTANCES_LOST',
    'PERFORMANCE_SCHEMA_THREAD_CLASSES_LOST',
    'PERFORMANCE_SCHEMA_THREAD_INSTANCES_LOST',
    'PREPARED_STMT_COUNT',
    'QCACHE_FREE_BLOCKS',
    'QCACHE_FREE_MEMORY',
    'QCACHE_HITS',
    'QCACHE_INSERTS',
    'QCACHE_LOWMEM_PRUNES',
    'QCACHE_NOT_CACHED',
    'QCACHE_QUERIES_IN_CACHE',
    'QCACHE_TOTAL_BLOCKS',
    'QUERIES',
    'QUESTIONS',
    'SELECT_FULL_JOIN',
    'SELECT_FULL_RANGE_JOIN',
    'SELECT_RANGE',
    'SELECT_RANGE_CHECK',
    'SELECT_SCAN',
    'SLAVE_HEARTBEAT_PERIOD',
    'SLAVE_OPEN_TEMP_TABLES',
    'SLAVE_RECEIVED_HEARTBEATS',
    'SLAVE_RETRIED_TRANSACTIONS',
    'SLOW_LAUNCH_THREADS',
    'SLOW_QUERIES',
    'SORT_MERGE_PASSES',
    'SORT_RANGE',
    'SORT_ROWS',
    'SORT_SCAN',
    'TABLE_LOCKS_IMMEDIATE',
    'TABLE_LOCKS_WAITED',
    'TC_LOG_MAX_PAGES_USED',
    'TC_LOG_PAGE_SIZE',
    'TC_LOG_PAGE_WAITS',
    'THREADS_CACHED',
    'THREADS_CONNECTED',
    'THREADS_CREATED',
    'THREADS_RUNNING',
    'UPTIME',
    'UPTIME_SINCE_FLUSH_STATUS',
    'MAX_CONNECTIONS',
    'QUERY_CACHE_SIZE',
    'TABLE_OPEN_CACHE',
);

/* The script is not interested in these values */

$remove = array (
    'COMPRESSION',
    'FLASHCACHE_ENABLED',
    'INNODB_HAVE_ATOMIC_BUILTINS',
    'INNODB_PAGE_SIZE',
    'RPL_STATUS',
    'SLAVE_RUNNING',
    'SSL_ACCEPT_RENEGOTIATES',
    'SSL_ACCEPTS',
    'SSL_CALLBACK_CACHE_HITS',
    'SSL_CIPHER',
    'SSL_CIPHER_LIST',
    'SSL_CLIENT_CONNECTS',
    'SSL_CONNECT_RENEGOTIATES',
    'SSL_CTX_VERIFY_DEPTH',
    'SSL_CTX_VERIFY_MODE',
    'SSL_DEFAULT_TIMEOUT',
    'SSL_FINISHED_ACCEPTS',
    'SSL_FINISHED_CONNECTS',
    'SSL_SESSION_CACHE_HITS',
    'SSL_SESSION_CACHE_MISSES',
    'SSL_SESSION_CACHE_MODE',
    'SSL_SESSION_CACHE_OVERFLOWS',
    'SSL_SESSION_CACHE_SIZE',
    'SSL_SESSION_CACHE_TIMEOUTS',
    'SSL_SESSIONS_REUSED',
    'SSL_USED_SESSION_CACHE_ENTRIES',
    'SSL_VERIFY_DEPTH',
    'SSL_VERIFY_MODE',
    'SSL_VERSION',
);

/* These values are in milliseconds */ 

$ms = array (
    'INNODB_ROW_LOCK_TIME_AVG',
    'INNODB_ROW_LOCK_TIME_MAX',
);

/* These values are in bytes */

$bytes = array (
    'BYTES_RECEIVED',
    'BYTES_SENT',
    'INNODB_ADAPTIVE_HASH_CELLS',
    'INNODB_DATA_WRITTEN',
    'INNODB_MEM_ADAPTIVE_HASH',
    'INNODB_MEM_DICTIONARY',
    'INNODB_MEM_TOTAL',
    'INNODB_OS_LOG_WRITTEN',
    'QUERY_CACHE_SIZE',
);

/* These values are not incrementing counters */

$not_counter = array (
    'INNODB_ADAPTIVE_HASH_CELLS',
    'INNODB_ADAPTIVE_HASH_HEAP_BUFFERS',
    'INNODB_BUFFER_POOL_PAGES_DATA',
    'INNODB_BUFFER_POOL_PAGES_DIRTY',
    'INNODB_BUFFER_POOL_PAGES_FLUSHED',
    'INNODB_BUFFER_POOL_PAGES_FREE',
    'INNODB_BUFFER_POOL_PAGES_LRU_FLUSHED',
    'INNODB_BUFFER_POOL_PAGES_MADE_NOT_YOUNG',
    'INNODB_BUFFER_POOL_PAGES_MADE_YOUNG',
    'INNODB_BUFFER_POOL_PAGES_MISC',
    'INNODB_BUFFER_POOL_PAGES_OLD',
    'INNODB_BUFFER_POOL_PAGES_TOTAL',
    'INNODB_LSN_CURRENT',
    'INNODB_LSN_FLUSHED',
    'INNODB_LSN_LAST_CHECKPOINT',
    'INNODB_MEM_ADAPTIVE_HASH',
    'INNODB_MEM_DICTIONARY',
    'INNODB_MEM_TOTAL',
    'MAX_CONNECTIONS',
    'MAX_USED_CONNECTIONS',
    'OPEN_FILES',
    'OPEN_TABLES',
    'OPEN_STREAMS',
    'OPEN_TABLE_DEFINITIONS',
    'PREPARED_STMT_COUNT',
    'QCACHE_FREE_BLOCKS',
    'QCACHE_FREE_MEMORY',
    'QCACHE_QUERIES_IN_CACHE',
    'QCACHE_TOTAL_BLOCKS',
    'SLAVE_OPEN_TEMP_TABLES',
    'TABLE_OPEN_CACHE',
    'THREADS_CACHED',
    'THREADS_CONNECTED',
    'THREADS_RUNNING',
);

try {
    $dbh = new PDO("mysql:host=$hostname;port=$port;dbname=information_schema", $username, $password);
    $sql = "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM GLOBAL_VARIABLES WHERE VARIABLE_NAME = 'VERSION' OR VARIABLE_NAME = 'VERSION_COMMENT'";
    foreach ($dbh->query($sql) as $row) {
        $version[$row['VARIABLE_NAME']] = $row['VARIABLE_VALUE'];
    }

    if (preg_match("/^5\.6\./", $version['VERSION'])) {
        $sql = "SELECT * FROM INFORMATION_SCHEMA.GLOBAL_STATUS";
        foreach ($dbh->query($sql) as $row) {
            $c[$row['VARIABLE_NAME']] = $row['VARIABLE_VALUE'];
        }
        $sql = "SELECT VARIABLE_NAME, VARIABLE_VALUE FROM INFORMATION_SCHEMA.GLOBAL_VARIABLES WHERE VARIABLE_NAME = 'MAX_CONNECTIONS' OR VARIABLE_NAME='QUERY_CACHE_SIZE' OR VARIABLE_NAME='TABLE_OPEN_CACHE' ORDER BY VARIABLE_NAME";
        foreach ($dbh->query($sql) as $row) {
            $c[$row['VARIABLE_NAME']] = $row['VARIABLE_VALUE'];
        }
        $ret_val = $RET_OK;
    } else {
        echo "UNKNOWN: Unsupported MySQL version (" . $version['VERSION'] . ")\n";
    }
} catch (PDOException $e) {
    echo $e->getMessage();
    $ret_val = $RET_UNK;
}

if ($ret_val == $RET_OK) {
    /* compute intersections */
    $arrWhite = array_intersect_key($c,array_flip($whitelist));
    $arrKeep = array_intersect_key($arrWhite, array_combine($arrDiff = array_values(array_diff(array_keys($arrWhite), $remove)), $arrDiff));
    
    foreach ($arrKeep as $k => $v) {
        $arrKeep[$k] = intval($arrKeep[$k]);
        if (in_array($k, $bytes)) {
            $arrKeep[$k] .= 'B';
        } elseif (in_array($k, $ms)) {
            $arrKeep[$k] .= 'ms';
        } elseif (in_array($k, $not_counter)) {
        } else {
            $arrKeep[$k] .= 'c';
        }
    }

    print "$SERVICE OK | ";
    foreach ($arrKeep as $k => $v) {
        print "'$k'=$v ";
    }
    print "\n";
    
}

exit($ret_val);

function usage () {
    global $RET_UNK;
    echo "UNKNOWN: usage: check_mysql_counters -H host -P port -u mysqluser -p mysqlpassword\n";
    exit($RET_UNK);
}
?>
